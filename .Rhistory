install.packages("shiny")
install.packages("leaflet")
install.packages("ggplot2")
shiny::runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read.csv("cricsheet_data.csv")
View(data)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(leaflet)
library(dplyr)
shiny::runApp()
data_count <- data %>% group_by(team_1) %>% tally()
View(data_count)
data_games = data %>% group_by(match.id, team1, team_2)
data_games = data %>% group_by(match.id, team_1, team_2)
View(data_games)
data_games = data %>% group_by(match.id, team_1, team_2) %>% reframe()
View(data_games)
data_count <- data_games %>% group_by(team_1) %>% tally()
data_count2 <- data_games %>% group_by(team_2) %>% tally()
View(data_count)
View(data_count2)
library(dplyr)
data_count <- data_games %>% group_by(team_1) %>% tally()
data_count2 <- data_games %>% group_by(team_2) %>% tally() %>% reframe(team_1=team_2, count=n)
View(data_count2)
data_count <- rbind(data_count, data_count2)
View(data_count2)
View(data_count)
data_count3 <- join(x=data_count, y=data_count2, by="team_1")
data_count3 <- merge(x=data_count, y=data_count2, by="team_1")
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>% reframe(team=team_1, n=count+n)
View(data_count3)
library(leaflet)
sessionInfo()
sessionInfo()
install.packages("leaflet")
install.packages("ggplot2", "rshiny", "dplyr")
install.packages("ggplot2", "shiny", "dplyr")
library(leaflet)
library(dplyr)
?addHeatmap
library(leaflet.extras)
?addHeatmap
data_games = data %>% group_by(match.id, team_1, team_2, long,lat) %>% reframe()
View(data_games)
data_count <- data_games %>% group_by(team_1, long,lat) %>% tally()
data_count2 <- data_games %>% group_by(team_2, long,lat) %>% tally() %>% reframe(team_1=team_2, count=n)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>% reframe(team=team_1, n=count+n)
View(data_count3)
View(data_count2)
View(data_count2)
View(data_count2)
install.packages("memoise")
install.packages("tmaptools")
?memoise
library(memoise)
?memoise
geocode_OSM("Melbourne")
library(tmaptools)
geocode_OSM("Melbourne")
coord <- geocode_OSM("Melbourne")
coords$coords
coord
coord$coords
coord$coords
coord$coords[1]
shiny::runApp()
get_location <- memoise(geocode_OSM)
get_location("Melbourne")
get_location("Melbourne")
get_location("Melbourne")$coords$x
get_location("Melbourne")$coords[1]
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>%
reframe(team=team_1, n=count+n, lat=get_location(team)[1], long=get_location(team)[2])
get_location("Australia")
get_location("Australia")
for
s
for(i in data_count) {}
for(i in data_count$team_1) {get_location(i)}
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>%
reframe(team=team_1, n=count+n, lat=get_location(team)[1], long=get_location(team)[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>%
reframe(team=team_1, n=count+n, lat=get_location(team)[1], long=get_location(team)[2])
View(data_count3)
View(data_count2)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>%
reframe(team=team_1, n=count+n)
View(data_count3)
View(data_count2)
View(data_count)
data_count3 <- rbind(x=data_count, y=data_count2, by="team_1") %>%
reframe(team=team_1, n=count+n)
data_count3 <- join(x=data_count, y=data_count2, by="team_1") %>%
reframe(team=team_1, n=count+n, lat=get_location(team)[1], long=get_location(team)[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1")
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>% group_by(team_1) %>% reframe(count=n+count)
View(data_count3)
data_count2 <- data_games %>% group_by(team_2) %>% tally() %>% reframe(team_1=team_2)
View(data_count2)
data_count2 <- data_games %>% group_by(team_2) %>% tally() %>% reframe(team_1=team_2,  n=n)
View(data_count2)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>% group_by(team_1) %>% reframe(count=sum(n))
data_count3 <- merge(x=data_count, y=data_count2, by="team_1") %>% group_by(team_1) %>% reframe(n= sum(n))
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE)
View(data_count3)
data_count2 <- data_games %>% group_by(team_2) %>% tally()
data_count3 <- merge(x=data_count, y=data_count2, by="team_2", all = TRUE)
data_count2 <- data_games %>% group_by(team_2) %>% tally() %>% reframe(team_1=team_2, n=n)
data_count3 <- merge(x=data_count, y=data_count2, by="team_2", all = TRUE)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE)
View(data_count3)
View(data_count)
data_count <- data_games %>% group_by(team_1) %>% tally()
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE)
View(data_count3)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)
View(data_count3)
integer(null)
integer(NULL)
to_int <- function(x) { if(is.na(x)) {return(0)} return(x)}
to_int <- function(x) { if(is.na(x)) {return(0);} return(x);}
to_int <- function(x) { if(is.na(x)) {return(0);} return(x)}
x<-function(x)
{ if(is.na(x)) {
return(0)
}
return(x)
}
x(1)
x(NULL)
x(NULL)
View(data_count3)
NULL+1
NULL+2
data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)
reframe(team=team_1, n=n, lat=get_location(team)[1], long=get_location(team)[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)
reframe(team=team_1, n=n, lat=get_location(team)[1], long=get_location(team)[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)%>%
reframe(team=team_1, n=n, lat=get_location(team)[1], long=get_location(team)[2])
get_location("Australia")[1]
get_location("Australia")
get_location("Australia")$coords[1]
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)%>%
reframe(team=team_1, n=n, lat=get_location(team)$coords[1], long=get_location(team)$coords[2])
View(data_count3)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y)%>%
reframe(team=team_1, n=n, lat=get_location(team)$coords[1], long=get_location(team)$coords[2])
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])%>%
s
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% filter(team_1="ICC World XI") %>% reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% filter(team_1=="ICC World XI") %>% reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", all = TRUE) %>% group_by(team_1) %>% filter(team_1!="ICC World XI") %>% reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
?addTiles
leaflet(data_count3) %>% addTiles() %>% addPolygons()
leaflet(data_count3) %>% addTiles()
library(tigris)
install.packages("tigris")
library(tigris)
library(sf)
install.packages("sf")
install.packages("sf")
install.packages("sf")
library(tigris)
library(sf)
tx_counties <- counties(state = "TX", cb = TRUE) %>%
transmute(COUNTY = toupper(NAME)
)
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
data_games = data %>% group_by(match.id, team_1, team_2) %>%
reframe(year=format(as.Date(start.date, "%Y-%m-%d")))
data <- read.csv("cricsheet_data.csv")
get_location <- memoise(geocode_OSM)
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(memoise)
library(tmaptools)
data <- read.csv("cricsheet_data.csv")
get_location <- memoise(geocode_OSM)
data_games = data %>% group_by(match.id, team_1, team_2) %>%
reframe(year=format(as.Date(start.date, "%Y-%m-%d")))
View(data_games)
data_games = data %>% group_by(match.id, team_1, team_2) %>%
reframe(year=format(as.Date(start.date, "%Y-%m-%d"), "%Y"))
View(data_games)
View(data_count3)
View(data_games)
?merge
data_count <- data_games %>% group_by(team_1, year) %>% tally()
data_count2 <- data_games %>% group_by(team_2, year) %>% tally() %>% reframe(team_1=team_2, n=n)
View(data_count2)
data_games = data %>% group_by(match.id, team_1, team_2) %>%
reframe(year=format(as.Date(start.date, "%Y-%m-%d"), "%Y"))
data_count <- data_games %>% group_by(team_1, year) %>% tally()
data_count2 <- data_games %>% group_by(team_2, year) %>% tally() %>% reframe(team_1=team_2, n=n, year=year)
View(data_count2)
data_count <- data_games %>% group_by(team_1, year) %>% tally() %>% reframe(team_1=team_1, year=year)
data_count2 <- data_games %>% group_by(team_2, year) %>% tally() %>% reframe(team_1=team_2, n=n, year=year)
View(data_count)
data_count <- data_games %>% group_by(team_1, year) %>% tally() %>% reframe(team_1=team_1, year=year,n=n)
data_count2 <- data_games %>% group_by(team_2, year) %>% tally() %>% reframe(team_1=team_2, n=n, year=year)
View(data_count)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year) %>%
filter(team_1!="ICC World XI") %>%
reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year) %>%
filter(team_1!="ICC World XI") %>%
reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
get_location("Australia")
get_location("Australia")\
get_location("Australia")
get_location("Afghansitan")
get_location("Afghanistan")
for(i in data_count$team_1){}
for(i in data_count$team_1){get_location(i)}
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year) %>%
filter(team_1!="ICC World XI") %>%
reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
get_location("Australia")
get_location("USA")
get_location("India")
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year) %>%
filter(team_1!="ICC World XI") %>%
reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
View(data_count3)
View(data_count2)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year)
View(data_count3)
data_count2 <- data_games %>% group_by(team_2, year) %>% tally() %>% reframe(team_1=team_2, year=year, n=n)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by="team_1", by.y="year", all = TRUE) %>% group_by(team_1, year)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>% group_by(team_1, year)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.r)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y)
View(data_count3)
data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y) %>% group_by(team_1, year.x) %>% reframe(n=n.x+n.y)
data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y, team_1.x!="ICC World XI") %>% group_by(team_1, year.x) %>% reframe(n=n.x+n.y)
data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y, team_1!="ICC World XI") %>% group_by(team_1, year.x) %>% reframe(n=n.x+n.y)
View(data_count3)
data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y, team_1!="ICC World XI") %>% group_by(team_1, year.x) %>% reframe(n=n.x+n.y) %>%
filter(team_1!="ICC World XI") %>%
reframe(year=year.x, n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y, team_1!="ICC World XI") %>% group_by(team_1, year.x) %>%
reframe(year=year.x, n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
View(data_count3)
View(data_count3)
data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
filter(year.x==year.y, team_1!="ICC World XI") %>% group_by(team_1, year.x) %>%
reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
View(data_count3)
write_csv("games_played.csv", data_count3)
write.csv("games_played.csv", data_count3)
write.csv(data_count3,"games_played.csv")
data <- read.csv("cricsheet_data.csv")
data_counts <- read.csv("games_played.csv")
View(data_counts)
world_sf <- read_sf("ne_110m_land.shp")
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(memoise)
library(tmaptools)
library(sf)
world_sf <- read_sf("ne_110m_land.shp")
world_sf <- read_sf("ne_110m_land.dbf")
View(world_sf)
download.file("http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_0_countries.zip", "countries.zip")
library(maps)
mapCountries <- map("country", fill = TRUE, plot = FALSE)
?map
library(maps)
mapCountries <- map("world", fill = TRUE, plot = FALSE)
View(mapCountries)
leaflet(mapCountries ) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = "red"
)
worldMap <- map("world", fill = TRUE, plot = FALSE)
rates <- data_counts$n[match(worldMap$names, data_counts$team_1)]
View(data_counts)
data_counts <- data_counts %>% filter(year==2010)
data_counts <- data_counts %>% filter(year.x==2010)
rates <- data_counts$n[match(worldMap$names, data_counts$team_1)]
cpal <- colorNumeric("Blues", rates)
leaflet(mapStates) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(data_counts$n)
)
leaflet(worldMap) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(data_counts$n)
)
mapCountries[["names"]]
?match
View(worldMap)
worldMap <- map("world", fill = TRUE, plot = FALSE)
rates <- data_counts$n[match(worldMap$names, data_counts$team_1)]
leaflet(worldMap) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(rates )
)
data_counts <- data_counts %>% group_by(team_1) %>% reframe(sum(n))
leaflet(worldMap) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(rates )
)
data_counts <- read.csv("games_played.csv")
data_counts <- data_counts %>% group_by(team_1) %>% reframe(sum(n))
worldMap <- map("world", fill = TRUE, plot = FALSE)
rates <- data_counts$n[match(worldMap$names, data_counts$team_1)]
leaflet(worldMap) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(rates )
)
data_counts <- read.csv("games_played.csv")
data_counts <- data_counts %>% group_by(team_1) %>% reframe(n=sum(n))
View(data_counts)
worldMap <- map("world", fill = TRUE, plot = FALSE)
rates <- data_counts$n[match(worldMap$names, data_counts$team_1)]
leaflet(worldMap) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(rates )
)
cpal <- colorNumeric("Blues", rates)
leaflet(worldMap) %>% # create a blank canvas
addTiles() %>%      # add tile
addPolygons(        # draw polygons on top of the base map (tile)
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
# use the rate of each state to find the correct color
color = ~cpal(rates )
)
shiny::runApp()
?leaflet
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?sliderInput
runApp()
runApp()
runApp()
runApp()
as.numeric(as.Date("2002", '%Y'))
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?sidebarPanel
runApp()
?sliderInput
runApp()
runApp()
View(data_counts)
View(data_counts)
data_counts <- read.csv("games_played.csv")
get_location <- memoise(geocode_OSM)
data_games = data %>% group_by(match.id, team_1, team_2) %>%
reframe(year=format(as.Date(start.date, "%Y-%m-%d"), "%Y"))
#data_count <- data_games %>% group_by(team_1, year) %>% tally() %>% reframe(team_1=team_1, year=year,n=n)
#data_count2 <- data_games %>% group_by(team_2, year) %>% tally() %>% reframe(team_1=team_2, year=year, n=n)
#data_count3 <- data_count3 <- merge(x=data_count, y=data_count2, by.x="team_1", by.y="team_1", all = TRUE) %>%
#  filter(year.x==year.y, team_1!="ICC World XI") %>% group_by(team_1, year.x) %>%
#  reframe(n=n.x+n.y,lat=get_location(team_1)$coords[1], long=get_location(team_1)$coords[2])
data_counts <- data_counts %>% group_by(team_1, year.x) %>% reframe(n=sum(n))
View(data_counts)
runApp()
runApp()
runApp()
runApp()
runApp()
worldMap$names
runApp()
